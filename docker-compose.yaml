services:

  accounts-manager:
    build: Accounts-Manager
    container_name: accounts-manager
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
    networks:
      public-net:
        ipv4_address: 192.168.12.6
      private-net:
        ipv4_address: 192.168.183.124


  reports-module-manager:
    build: Reports-Module-Manager
    container_name: reports-module-manager
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
      - ./volumes/rmm:/resources
    networks:
      private-net:
        ipv4_address: 192.168.183.122
      public-net:
        ipv4_address: 192.168.12.7
    depends_on:
      - authentication-service
      - mongodb-database

  
  reports-module-console:
    build: Reports-Module-Console
    container_name: reports-module-console
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
    networks:
      public-net:
        ipv4_address: 192.168.12.8
    depends_on:
      - authentication-service
      - reports-module-manager

  hcs-c4gh:
    build: HCS-C4GH
    container_name: hcs-c4gh
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
      - ./volumes/C4GH:/opt/C4GH
    networks:
      private-net:
        ipv4_address: 192.168.183.121
    depends_on:
      - authentication-service
  
  authorization-service:
    build: Authorization-Service
    container_name: authorization-service
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
    networks:
      private-net:
        ipv4_address: 192.168.183.120
    depends_on:
      - authentication-service
  
  policy-service:
    build: Policy-Service
    container_name: policy-service
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
    networks:
      private-net:
        ipv4_address: 192.168.183.119
    depends_on:
      - authentication-service
  
  protection-service:
    build: Protection-Service
    container_name: protection-service
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
    networks:
      private-net:
        ipv4_address: 192.168.183.118
    depends_on:
      - authentication-service
      - database_hipams
      - health-content-service
  
  search-service:
    build: Search-Service
    container_name: search-service
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
    networks:
      private-net:
        ipv4_address: 192.168.183.117
    depends_on:
      - authentication-service
      - database_hipams
  
  health-content-service:
    build: health-content-service
    container_name: health-content-service
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
      - ./volumes/hcs:/resources
      - ./volumes/schemas:/resources/storage/schemas

    networks:
      private-net:
        ipv4_address: 192.168.183.116
    depends_on:
      - authentication-service
      - database_hipams
  
  workflow-manager:
    build: Workflow-Manager
    container_name: workflow-manager
    volumes:
      - C:\Users\arnau\.m2:/root/.m2
    networks:
      private-net:
        ipv4_address: 192.168.183.115
      public-net:
        ipv4_address: 192.168.12.4
    depends_on:
      - authentication-service
      - database_hipams
      - health-content-service
      - authorization-service
      - search-service

  user-application:
    build: User-Application
    container_name: user-application
    volumes:
      - C:\Users\arnau\.m2:/root/.m2      
      - ./volumes/ua:/resources
    networks:
      public-net:
        ipv4_address: 192.168.12.3
      private-net:              # <— aquí lo añades
        ipv4_address: 192.168.183.125
    depends_on:
      - workflow-manager
    links:
      - authentication-service
      - workflow-manager
      - accounts-manager

  keycloak_db:
    image: mysql:latest
    container_name: keycloak-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak
      MYSQL_DATABASE: keycloak
    volumes:
      - ./volumes/keycloak/database:/var/lib/mysql  # Montar volumen para persistencia de datos
    networks:
      private-net:
        ipv4_address: 192.168.183.110

  authentication-service:
    image: quay.io/keycloak/keycloak:26.1.4
    container_name: authentication-service
    command:
      - start
      - --http-enabled=true           # listener interno sin TLS
      - --http-port=9090
      - --proxy-headers=xforwarded    # sustituto de --proxy=edge
      - --hostname=https://dmag6.pc.ac.upc.edu
      - --hostname-admin=https://dmag6.pc.ac.upc.edu
      - --hostname-strict=true  # obliga a que todo sea https://
    
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://keycloak-db:3306/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

      # Para forzar que todas las URLs internas se construyan con HTTPS:
      KC_HOSTNAME_STRICT_HTTPS: "true"
      KC_PROXY_HEADERS: xforwarded
    depends_on:
      - keycloak_db
    volumes:
      - ./volumes/keycloak/standalone:/opt/keycloak/data
    ports:
      - 9090:9090
    networks:
      private-net:
        ipv4_address: 192.168.183.113
      public-net:
        ipv4_address: 192.168.12.2


  database_hipams:
    image: mysql:latest
    container_name: database_hipams
    volumes:
      - ./volumes/db/init.sql:/docker-entrypoint-initdb.d/1.sql
      - ./volumes/db/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
    expose:
      - "3306"
    networks:
      private-net:
        ipv4_address: 192.168.183.114
    
    
  #es pels logs generats pel RMM o RMC
  mongodb-database:
    image: mongo
    container_name: mongodb-database
    volumes:
      - ./volumes/mongodb/init.js:/docker-entrypoint-initdb.d/1.js
      - ./volumes/mongodb/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: admin
    expose:
      - "27017"
    networks:
      private-net:
        ipv4_address: 192.168.183.123

  nginx_rproxy:
    image: openresty/openresty:latest
    container_name: nginx-rproxy
    volumes:
      - ./volumes/proxy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./volumes/proxy/certs:/etc/certs
      - ./volumes/proxy/scripts/ip_block.lua:/etc/nginx/ip_block.lua
      - ./volumes/proxy/scripts/ip_unblock.lua:/etc/nginx/ip_unblock.lua
      - ./volumes/proxy/scripts/ip_check.lua:/etc/nginx/ip_check.lua
    ports:
      - "443:443"
    depends_on:
      - authentication-service
      - user-application
      - reports-module-console

    networks:
      private-net:
        ipv4_address: 192.168.183.112
      public-net:
        ipv4_address: 192.168.12.5

  

  
























networks:
  private-net:
    name: private-net
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.183.0/24
          gateway: 192.168.183.1

  public-net:
    name: public-net
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.12.0/24
          gateway: 192.168.12.1